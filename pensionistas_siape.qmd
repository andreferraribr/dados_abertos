---
title: "Pensionistas Siape"
editor: visual
lang: "pt"
format:
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
execute:
  warning: false
  message: false
---

```{r}
#| warning: false
#| message: false
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(plotly)
library(knitr)
library(kableExtra)
library(deflateBR)
library(DescTools)
library(zoo)
library(stringr)
library(DT)
library(stringr)

`%notin%` <- Negate(`%in%`)
myNumFmt <- as.fmt(digits=0, big.mark=".")
```

## Tratamento dos dados

### Tabela Cadastro

```{r}

pensionistas_siape_cadastro <- read_delim("servidores/servidores/pos_2020/pensionistas_siape/202311_Cadastro.csv", 
    delim = ";", escape_double = FALSE, locale = locale(date_names = "pt", 
        decimal_mark = ",", grouping_mark = ".", 
        encoding = "Latin1"), trim_ws = TRUE) %>% clean_names()%>% mutate(nome_id = str_c(str_sub(nome, start = 1L, end = 4L), " - ",id_servidor_portal), cpf_instituidor = paste0(str_sub( cpf_instituidor_pensao,  start = 5L, end = -4L),"-",str_sub( nome_instituidor_pensao,   start = 1L, end = 5L)))
```

#### Atributo nome_id

```{r}
pensionistas_siape_cadastro %>% filter(str_detect(nome,"PENSIONISTA")) %>% select(nome, id_servidor_portal) %>% head() %>% kable()
```

```{r}
pensionistas_siape_cadastro %>% filter(str_detect(nome,"PENSIONISTA")) %>% select(nome, id_servidor_portal, nome_id) %>% head() %>% kable()
```

```{r}
pensionistas_siape_cadastro %>% filter(!str_detect(nome,"PENSIONISTA")) %>% select( nome_id) %>% head() %>% kable()
```

#### Atributo cpf_instituidor

```{r}
pensionistas_siape_cadastro %>% select(cpf_instituidor) %>% head() %>% kable()
```

#### Dados Sigilosos

A base retorna `r  Format(nrow(pensionistas_siape_cadastro %>% filter (nome_id == "Sigi - -11")), fmt = myNumFmt)` registros sigilosos nos quais são ocultados, dentre outros, os nomes dos beneficiários. Quando o registro é sigiloso, são disponibilizados apenas o cpf e o nome do instituidor da pensão.

```{r}
pensionistas_siape_cadastro %>% filter (nome_id == "Sigi - -11") %>% select(nome, cpf, matricula, cpf_instituidor_pensao) %>% kable()


```

#### Sem CPF do instituidor da pensão

A base retorna `r  Format(nrow(pensionistas_siape_cadastro %>% filter(cpf_instituidor == "NA-Sem i")), fmt = myNumFmt)` registros sem dados para o nome ou cpf do instituidor da pensão.

```{r}
pensionistas_siape_cadastro %>% filter(cpf_instituidor == "NA-Sem i")%>% group_by(nome_id) %>% count()  %>% arrange(desc(n)) %>% head(5)%>% kable()
```

```{r}
pensionistas_siape_cadastro %>% filter(nome_id == "ALAY - 311552361")%>% select( nome_id, tipo_pensao, data_inicio_pensao, cpf_instituidor)%>% kable()
```

#### Dados Sigilosos e Sem CPF do instituidor da pensão

Felizmente há `r nrow( pensionistas_siape_cadastro %>%  filter(cpf_instituidor == "NA-Sem i",nome_id == "Sigi - -11" ))` registros que simultameamente sejam sigilosos e não tenham os dados do instituidor da pensão (CPF e nome).

#### Um instituidor para vários beneficiários

```{r}

pensionistas_siape_cadastro %>% filter(cpf_instituidor != "NA-Sem i" )%>%  group_by(cpf_instituidor) %>% count()  %>% arrange(desc(n)) %>% head(10)%>% kable()
```

```{r}

pensionistas_siape_cadastro %>% filter(cpf_instituidor == "686.107-JOSE ") %>% select(cpf_instituidor, tipo_pensao, data_inicio_pensao , nome_id) %>% arrange(parse_date_time(  data_inicio_pensao,"dmy"))%>% kable()


```

### Remuneração

```{r}
pensionistas_siape_remuneracao <- read_delim("servidores/servidores/pos_2020/pensionistas_siape/202311_Remuneracao.csv", 
    delim = ";", escape_double = FALSE, locale = locale(date_names = "pt", 
        decimal_mark = ",", grouping_mark = ".", 
        encoding = "Latin1"), trim_ws = TRUE) %>% clean_names() %>% mutate( nome_id = str_c(str_sub(nome, start = 1L, end = 4L), " - ",id_servidor_portal))
```

```{r}
pensionistas_siape_remuneracao %>% filter(startsWith(ano, "(*) Verbas indenizatórias são as parcelas indenizatórias")) %>% group_by(ano) %>% count() %>% kable()


pensionistas_siape_remuneracao <- pensionistas_siape_remuneracao %>% filter(!startsWith(ano, "(*) Verbas indenizatórias são as parcelas indenizatórias"))
```

### Cuidados antes de associar as tabelas

#### Dados ausentes

`r  Format((nrow(pensionistas_siape_cadastro)-nrow(pensionistas_siape_remuneracao)), fmt = myNumFmt)`

```{r}


pensionistas_siape_cadastro %>% filter(nome_id %in% 
    (setdiff(pensionistas_siape_cadastro %>% select(nome_id),   pensionistas_siape_remuneracao %>% select(nome_id)) )$nome_id) %>%
  group_by(nome_id) %>% count() %>% adorn_totals() %>% kable()
```

![](servidores/servidores/remuneracao.png)

![](servidores/servidores/ausente_01.png)

![](servidores/servidores/ausente_02.png)

#### Dados duplicados

```{r}
pensionistas_siape_cadastro %>% filter(nome_id != "Sigi - -11" ) %>% group_by(nome_id) %>% count() %>% group_by(n) %>% count() %>% mutate (repetidos = (n-1)*nn) %>%adorn_totals() %>% kable(col.names = c("quantidade de benefícios","ocorrências", "repeditos"), format.args = list(big.mark = ".", decimal.mark = ","))


```

### Resultado da associação das tabelas: "tabela_pensionista_siape"

```{r}
tabela_pensionista_siape <- left_join(pensionistas_siape_remuneracao %>% select(ano,mes,id_servidor_portal, nome, cpf, nome_id, remuneracao_apos_deducoes_obrigatorias_r),pensionistas_siape_cadastro )




tabela_pensionista_siape <- tabela_pensionista_siape %>% mutate(inicio = year(parse_date_time(data_inicio_pensao,"dmy")))


```

`r  (nrow(pensionistas_siape_cadastro)-nrow(tabela_pensionista_siape))`

```{r}



(nrow( setdiff( tabela_pensionista_siape %>% select(nome_id),pensionistas_siape_cadastro %>% select(nome_id)) ))









```

#### Múltiplos benefícios para um beneficiário

```{r}
multiplos <- (tabela_pensionista_siape%>% group_by(nome_id) %>% count() %>% filter(n>1))




```

##### Três benefícios

```{r}

tabela_pensionista_siape %>% filter( nome_id %in% (multiplos %>% filter(n==3))$nome_id) %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% kable()
```

##### Dois benefícios

```{r}
tabela_pensionista_siape %>% filter(nome_id %in% (multiplos %>% filter(n==2))$nome_id, startsWith(nome,"T")) %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% tail(11) %>% kable()


```

```{r}
# tabela_pensionista_siape %>% filter(nome_id %in% multiplos$nome_id) %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% filter(n<2)%>% group_by(descricao_cargo_instituidor_pensao) %>% count()%>% arrange(desc(n)) %>% head(10) %>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))
# 
# 
# tabela_pensionista_siape %>% filter(nome_id %in% multiplos$nome_id) %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% group_by(descricao_cargo_instituidor_pensao) %>% count()%>% arrange(desc(n)) %>% head(10) %>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))
# 
# 
# 
#  tabela_pensionista_siape  %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% group_by(descricao_cargo_instituidor_pensao) %>% count()%>% arrange(desc(n)) %>% head(10) %>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))
 
 
 
left_join( tabela_pensionista_siape  %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% group_by(descricao_cargo_instituidor_pensao) %>% count()%>% arrange(desc(n)) %>% head(10),tabela_pensionista_siape %>% filter(nome_id %in% multiplos$nome_id) %>% group_by(nome_id, descricao_cargo_instituidor_pensao) %>% count() %>% group_by(descricao_cargo_instituidor_pensao) %>% count()%>% arrange(desc(n)) , by = ("descricao_cargo_instituidor_pensao"))%>% mutate (percentual = n.y/n.x*100)%>% kable(col.names = c("cargo","total","possíveis duplicações", "percentual de possíveis duplicações"),digits = 1, format.args = list(big.mark = ".", decimal.mark = ","))
```

```{r}
 

# tabela_pensionista_siape %>% group_by(descricao_cargo_instituidor_pensao) %>% count() %>% arrange(desc(n)) %>% head(10) %>% kable()


```

#### Evitar duplicar valores da remuneração

#### 

```{r}
tabela_pensionista_siape %>% filter(nome_id %in% c("ALDA - 312278709"))  %>% select(nome_id, cpf_instituidor, remuneracao_apos_deducoes_obrigatorias_r)  %>% kable()
```

##### unique()

```{r}
tabela_pensionista_siape %>% filter(nome_id %in% c("ALDA - 312278709"))  %>% select(nome_id,  remuneracao_apos_deducoes_obrigatorias_r) %>% unique() %>% kable( format.args = list(big.mark = ".", decimal.mark = ",")) 
```

##### max()

```{r}
tabela_pensionista_siape %>% filter(nome_id %in% c("ALDA - 312278709"))  %>% group_by(nome_id) %>% summarise(valor = sum(max(remuneracao_apos_deducoes_obrigatorias_r)))%>% kable( format.args = list(big.mark = ".", decimal.mark = ","))
```

##### 

```{r}

# (as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r) %>% group_by(nome_id) %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)) %>% summarise(valor = sum(valor))))-(sum(pensionistas_siape_remuneracao$remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE))


```

```{r}


# nrow(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r))-  nrow(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r) %>% unique())-nrow(pensionistas_siape_cadastro %>% filter (nome_id == "Sigi - -11"))
# 
# as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r)  %>% group_by(nome_id) %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)) %>% summarise(valor = sum(valor)))
# 
# 
# as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r) %>% unique() %>% group_by(nome_id) %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)) %>% summarise(valor = sum(valor)))
# 
# sum(pensionistas_siape_remuneracao$remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)

valores <- c(
  
  as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r)  %>% group_by(nome_id) %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)) %>% summarise(valor = sum(valor))),
  
 as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r) %>% unique() %>% group_by(nome_id) %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)) %>% summarise(valor = sum(valor))),
 
  as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r)  %>% group_by(nome_id) %>% summarise(valor = sum(max(remuneracao_apos_deducoes_obrigatorias_r), na.rm = TRUE)) %>% summarise(valor = sum(valor))),
 
 sum(pensionistas_siape_remuneracao$remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)
  
  )

titulo <- c("pensionistas", "pensionistas_unique" , "pensionistas_max","tabela" )

calculo <- data.frame(titulo,valores)

calculo %>% kable( format.args = list(big.mark = ".", decimal.mark = ","))

# (as.numeric(tabela_pensionista_siape %>% select(nome_id, remuneracao_apos_deducoes_obrigatorias_r) %>% unique() %>% group_by(nome_id) %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE)) %>% summarise(valor = sum(valor))))-(sum(pensionistas_siape_remuneracao$remuneracao_apos_deducoes_obrigatorias_r, na.rm = TRUE))










```

## Análise dos dados

```{r}




tabela_pensionista_siape %>%filter(cpf_instituidor != "NA-Sem informação") %>% group_by(  nome_id) %>% summarise(valor = max((remuneracao_apos_deducoes_obrigatorias_r))) %>% arrange(desc(valor)) %>% head() %>% kable( format.args = list(big.mark = ".", decimal.mark = ","))
```

![](servidores/servidores/top_benficio.png)

```{r}

# tabela_pensionista_siape %>% mutate(ano = year(data_inicio_pensao)) %>% group_by(inicio) %>% summarise(valor = max(remuneracao_apos_deducoes_obrigatorias_r)) %>% arrange(desc(valor)) %>% kable( format.args = list(big.mark = ".", decimal.mark = ","))






```

```{r}
# tabela_pensionista_siape %>% mutate(ano = year(data_inicio_pensao)) %>% group_by(nome_id, inicio) %>% summarise(valor = max(remuneracao_apos_deducoes_obrigatorias_r)) %>% group_by(inicio) %>% summarise(valor = sum(valor/1000000000)) %>% arrange(desc(valor)) %>% adorn_totals()
```

```{r}
p <- ggplot(tabela_pensionista_siape %>% mutate(ano = year(data_inicio_pensao)) %>% group_by(nome_id, inicio) %>% summarise(valor = max(remuneracao_apos_deducoes_obrigatorias_r)) %>% group_by(inicio) %>% summarise(valor = sum(valor/1000000000)) %>% mutate(acumulado= cumsum(valor)), aes(x=inicio, y=acumulado)) +
    geom_line()    # Use hollow circles

ggplotly(p)












```

```{r}
p <- ggplot(tabela_pensionista_siape %>% mutate(ano = year(data_inicio_pensao)) %>% group_by(nome_id, inicio) %>% summarise(valor = max(remuneracao_apos_deducoes_obrigatorias_r)) %>% group_by(inicio) %>% summarise(valor = sum(valor/1000000000)) %>% mutate(acumulado= cumsum(valor)), aes(x=inicio, y=valor)) +
    geom_line()    # Use hollow circles

ggplotly(p)
```

```{r}
p <- ggplot(tabela_pensionista_siape %>% group_by(inicio) %>% summarise(n = n()) %>% mutate(acumulado = cumsum(n)), aes(x=inicio, y=acumulado)) +
    geom_line()    # Use hollow circles

ggplotly(p)
```

```{r}
p <- ggplot(tabela_pensionista_siape %>% group_by(inicio) %>% summarise(n = n()) %>% mutate(acumulado = cumsum(n)), aes(x=inicio, y=n)) +
    geom_line()    # Use hollow circles

ggplotly(p)
```

```{r}
p <- ggplot(tabela_pensionista_siape %>% group_by( tipo_pensao)    %>% count() , aes(x=n, y=fct_reorder( tipo_pensao,n ))) +
    geom_col()    # Use hollow circles

ggplotly(p)
```

```{r}
tabela_pensionista_siape %>% group_by( descricao_cargo_instituidor_pensao)    %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r/1000000)) %>% arrange(desc(valor)) %>% head(10)%>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))






```

```{r}
# tabela_pensionista_siape %>% group_by( descricao_cargo_instituidor_pensao)    %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r)) %>% arrange(desc(valor)) %>% head(10) %>% kable( format.args = list(big.mark = ".", decimal.mark = ","))
```

```{r}

tabela_pensionista_siape %>% group_by( descricao_cargo_instituidor_pensao)    %>% summarise(valor = mean(remuneracao_apos_deducoes_obrigatorias_r)) %>% arrange(desc(valor)) %>% tail(20) %>% kable( digits = 0,format.args = list(big.mark = ".", decimal.mark = ","))
```

```{r}
tabela_pensionista_siape %>% group_by( descricao_cargo_instituidor_pensao)    %>% summarise(valor = mean(remuneracao_apos_deducoes_obrigatorias_r)) %>% arrange(desc(valor)) %>% head(10) %>% kable( digits = 0,format.args = list(big.mark = ".", decimal.mark = ","))
```

```{r}
tabela_pensionista_siape %>% group_by( regime_juridico_instituidor_pensao)    %>% summarise(valor = round( sum(remuneracao_apos_deducoes_obrigatorias_r ))) %>% arrange(desc(valor)) %>% head(10) %>% kable( format.args = list(big.mark = ".", decimal.mark = ","))



```

```{r}

tabela_pensionista_siape %>% group_by(situacao_vinculo)    %>% summarise(valor = round( sum(remuneracao_apos_deducoes_obrigatorias_r ))) %>% arrange(desc(valor)) %>% head(10) %>% kable( format.args = list(big.mark = ".", decimal.mark = ","))
```

```{r}

p <- ggplot(tabela_pensionista_siape %>%  filter(tipo_pensao == "Filho (a) / Menor sob guarda / Enteado (a)" ) %>% group_by(  inicio)    %>% summarise(valor = sum(remuneracao_apos_deducoes_obrigatorias_r)), aes(x=inicio, y=valor)) +
    geom_line()    # Use hollow circles

ggplotly(p)


```

```{r}

```

```{r}
 (sum(tabela_pensionista_siape$remuneracao_apos_deducoes_obrigatorias_r)-sum(pensionistas_siape_remuneracao$remuneracao_apos_deducoes_obrigatorias_r))/sum(pensionistas_siape_remuneracao$remuneracao_apos_deducoes_obrigatorias_r)*100
```
