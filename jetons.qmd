---
title: "Jetons"
editor: visual
lang: "pt"
format:
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
    # page-layout: full
execute:
  warning: false
  message: false
  error: false
  freeze: auto  # re-render only when source changes  
---

```{r bibliotecas}
#| warning: false
#| message: false
#| error: false
library(readxl)
library(tidyverse)
library(janitor)
library(lubridate)
library(tidyverse)
library(purrr)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(plotly)
library(DT)
```

```{r funcoes_e_opcoes}
# negar %in%
`%notin%` <- Negate(`%in%`)

# formato dos numeros
myNumFmt <- as.fmt(digits=0, big.mark=".")

options(scipen = 999)
```

## Importar e tratar dados

```{r}
#| eval: false

# get all the zip files
zipF <- list.files(path = "~/R/dados_abertos/servidores/jetons", pattern = "*.zip", full.names = TRUE)
library(plyr)
# unzip all your files
ldply(.data = zipF, .fun = unzip, exdir =  "~/R/dados_abertos/servidores/jetons")

ler_jetons <- function(x) {read_delim(x, 
                                      delim = ";", escape_double = FALSE, col_types = cols(MES = col_character()), 
                                      locale = locale(decimal_mark = ",", grouping_mark = ".", 
                                                      encoding = "Latin1"), trim_ws = TRUE)} 
# agrupar <- function(x){ler_jetons(x) %>% group_by(uf, nome_municipio, mes_referencia) %>% summarise(valor = sum(valor_parcela), quantidade = n())} 
arq_jetons <- list.files("C:/Users/andre.ferrari/Documents/R/dados_abertos/servidores/jetons", pattern='*.csv')
setwd("C:/Users/andre.ferrari/Documents/R/dados_abertos/servidores/jetons")
jetons <- map_df(arq_jetons,ler_jetons)

jetons <- jetons %>% clean_names() 
write_csv(jetons,"jetons.csv")
```

```{r importar_dados}
jetons <- read_csv("~/R/dados_abertos/servidores/jetons/jetons.csv")
```

### Atributo *nome_id*

```{r nome_id}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_id
#| tbl-cap: Atributo nome_id.


jetons <-  jetons %>% mutate(nome_id = str_c(str_sub(nome, start = 1L, end = 4L), " - ",id_servidor_portal))


jetons %>% group_by(nome_id) %>% summarise(nome_id = max(nome_id)) %>% head(10) %>% kable()
```

### Atributo *empresa*

Infelizmente o base de dados não traz o CNPJ das empresas. Enfrentamos desafio semelhante com a base de dados da receita @sec-inconsistencia_nomes

A base da dados retorna `r Format(length( unique(jetons$empresa)), fmt=myNumFmt)` registros únicos para o atributo *empresa*.

```{r nome_empresa_gas}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_gas
#| tbl-cap: Nome das empresas.

agrep("GAS BRASILIANO DISTRIBUIDORA S.A",unique(jetons$empresa),value = TRUE ,ignore.case = TRUE) %>% kable(col.names = c("empresa"))

```

### Função *nome_empresa*

```{r funcao_nome_empresa}
#| warning: false
#| message: false
#| error: false




nome_empresa <- function(empresa_find){
empresa_max <-  str_to_upper( max(unique(jetons$empresa)[agrep(empresa_find,unique(jetons$empresa), ignore.case = TRUE)]))
empresa <- empresa_find
df <- data.frame(empresa, empresa_max)
}



nome_empresa_novo <- map_df(unique(jetons$empresa), nome_empresa)



jetons <- left_join(jetons,nome_empresa_novo, by = c("empresa" = "empresa"))






```

A base da dados retorna `r Format(length( unique(jetons$nome)), fmt=myNumFmt)` registros únicos para o atributo nome.

Valor total pago entre

### Atributo *empresa_max*

```{r nome_empresa_max}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_max
#| tbl-cap: Agrupamento dos nomes - etapa 1 (nome_max).

nome_empresa_novo %>% group_by(empresa_max) %>% count() %>% arrange(desc(n)) %>% head(10) %>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))


```

A base da dados retorna `r Format(length( unique(jetons$empresa_max)), fmt=myNumFmt)` registros únicos para o atributo *empresa_max*.

```{r nome_empresa_max_problemas}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_max_problemas
#| tbl-cap: Agrupamento dos nomes - etapa 2 (inconsistências).
jetons %>% filter(empresa %in% c ("BB SEGURIDADE PARTICIPAÇÕES S.A.","CAIXA SEGURIDADE E PARTICIPAÇÕES S.A.", "COMPANHIA DE DOCAS DO PARÁ - CDP", "COMPANHIA DOCAS DO CEARÁ - CDC", "ompanhia Imobiliária de Brasília - TERRACAP" ) ) %>% group_by(empresa_max,empresa) %>% count()%>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))
```

### Atributo *empresa_final*

```{r nome_empresa_final}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_final
#| tbl-cap: Agrupamento dos nomes - etapa 3 (nome_final).


jetons <-  jetons %>% mutate( empresa_final  = case_when(
empresa_max == "OMPANHIA IMOBILIÁRIA DE BRASÍLIA - TERRACAP" ~ "COMPANHIA IMOBILIÁRIA DE BRASÍLIA - TERRACAP",
empresa_max == "ITAIPUBINACIONAL" ~ "ITAIPU BINACIONAL",
empresa_max == "CAIXA SEGURIDADE E PARTICIPAÇÕES S.A." & empresa ==  "BB SEGURIDADE PARTICIPAÇÕES S.A." ~ "BB SEGURIDADE PARTICIPAÇÕES S.A.",
empresa_max == "COMPANHIA DOCAS DO PARÁ - CDP" & empresa ==  "COMPANHIA DOCAS DO CEARÁ - CDC" ~ "COMPANHIA DOCAS DO CEARÁ - CDC",
empresa_max == "REMPRESA BRASILEIRA DE AERONAUTICA" ~ "EMPRESA BRASILEIRA DE AERONAUTICA",
empresa_max == "SA BRASILEIRA DE AERONAUTICA" ~ "EMPRESA BRASILEIRA DE AERONAUTICA",
empresa_max == "U BINACIONAL" ~ "ITAIPU BINACIONAL",

TRUE ~ empresa_max

))


jetons %>% filter(empresa %in% c ("BB SEGURIDADE PARTICIPAÇÕES S.A.","CAIXA SEGURIDADE E PARTICIPAÇÕES S.A.", "COMPANHIA DE DOCAS DO PARÁ - CDP", "COMPANHIA DOCAS DO CEARÁ - CDC", "ompanhia Imobiliária de Brasília - TERRACAP" , "ITAIPU BINACIONAL", "U BINACIONAL", "EMPRESA BRASILEIRA DE AERONAUTICA","REMPRESA BRASILEIRA DE AERONAUTICA","SA BRASILEIRA DE AERONAUTICA") ) %>% group_by(empresa_final, empresa_max,empresa) %>% count()%>% arrange(empresa_final) %>%    kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ",")) 

```

A base da dados retorna `r Format(length( unique(jetons$empresa_final)), fmt=myNumFmt)` registros únicos para o atributo *empresa_final*.

```{r}

jetons %>%  group_by(empresa_final,ano, mes) %>% mutate(ano = as.character(ano)) %>% summarise(maior = max(valor), menor = min(valor), diferenca = round(maior - menor,0) ,variacao = round(diferenca /menor,0)) %>% filter(variacao > 10, menor>2)  %>% arrange(desc(variacao))  %>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))


```

```{r}
(jetons %>%  group_by(empresa_final,ano,  nome_id) %>% mutate(ano = as.character(ano)) %>% summarise(maior = max(valor), menor = min(valor), diferenca = round(maior - menor,0) ,variacao = round(diferenca /menor,0)) %>% filter(variacao > 10, menor>2)  %>% arrange(desc(variacao)))%>% kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))
```

## Apresentação dos dados

### Visão geral

```{r visao_geral}
#| warning: false
#| message: false
#| error: false
#| label: fig-plot_jetons
#| fig-cap: Valor médio dos pagamentos de jetons por ano e por empresa.




p <- ggplot(jetons %>% group_by(empresa_final, ano) %>% summarize(valor = round(mean(valor),0)) , aes(valor, ano, color = empresa_final)) +
  geom_jitter ()+ coord_flip()+ theme(legend.position="none")

ggplotly(p)
```

### Maiores jetons pagos em um único mês

```{r maiores_jetons}
#| warning: false
#| message: false
#| error: false
#| label: tbl-maiores_jetons
#| tbl-cap: Maiores jetons pagos em um único mês.




jetons %>% mutate (data = format(parse_date_time(paste0(jetons$ano,jetons$mes),"ym"), "%b-%Y"))%>% group_by(empresa_final, data, nome_id) %>% summarise(valor = max(valor, na.rm = TRUE))  %>% arrange(desc(valor)) %>% head(20) %>% kable(col.names = c("Empresa","Data","Servidor","(R$)"),digits = 0, format.args = list(big.mark = ".", decimal.mark = ",")) %>%
  kable_styling(font_size = 9)





```

### Servidores que mais receberam jetons

```{r total_jetons_recebidos}
#| warning: false
#| message: false
#| error: false
#| label: tbl-ranking_servidor_jetons
#| tbl-cap: Servidores que mais receberam jetons.

jetons %>% group_by(nome_id) %>% summarise(valor = sum(valor)) %>% arrange(desc(valor)) %>% head(20)%>% kable(col.names = c("Servidor",paste0("(R$) entre " , min(jetons$ano), " e ", max(jetons$ano))), digits = 0, format.args = list(big.mark = ".", decimal.mark = ",")) %>%
  kable_styling(font_size = 9)



```

### Empresas que mais pagaram jetons

```{r maiores_pagadores_de_jetons}
#| warning: false
#| message: false
#| error: false
#| label: tbl-ranking_empresas_jetons
#| tbl-cap: Empresas que mais pagaram jetons.
jetons %>% group_by( empresa_final) %>% summarise(valor = sum(valor)/1000000) %>% arrange(desc(valor)) %>% head(20)%>% kable(col.names = c("Empresa",paste0("(R$ mi) entre " , min(jetons$ano), " e ", max(jetons$ano))),digits = 2, format.args = list(big.mark = ".", decimal.mark = ",")) %>%
  kable_styling(font_size = 9)




```
