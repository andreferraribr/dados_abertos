---
title: "Jetons"
editor: visual
lang: "pt"
format:
  html:
    code-fold: true
    code-summary: "mostrar o código"
    code-overflow: wrap
    # page-layout: full
execute:
  warning: false
  message: false
  error: false
  freeze: auto  # re-render only when source changes  
---

```{r bibliotecas}
#| warning: false
#| message: false
#| error: false
library(tidyverse)
library(janitor)
library(lubridate)
library(purrr)
library(knitr)
library(kableExtra)
library(DescTools)
library(zoo)
library(stringr)
library(plotly)
library(DT)
```

```{r funcoes_e_opcoes}
# negar %in%
`%notin%` <- Negate(`%in%`)

# formato dos numeros
myNumFmt <- as.fmt(digits=0, big.mark=".")

options(scipen = 999)
```

## Importar e tratar dados

Começamos a nossa jornada baixando do [Portal da Transparência](https://portaldatransparencia.gov.br/download-de-dados/servidores) os arquivos zippados. Depois utilizamos uma rotina para identificar, extrair, ler e organizar em uma única tabela os arquivos mensais com os dados sobre jetons.

Para acelerar o processo, realizamos previamente a leitura dos dados e depois salvamos o resultado no arquivo "jetons.csv".

```{r rotina_unzip_criar_df}
#| eval: false

# este bloco não será executado (eval = false)

# segui esta dica: https://www.appsloveworld.com/r/100/49/how-can-i-extract-multiple-zip-files-and-read-those-csvs-in-r?expand_article=1

caminho <- "~/R/dados_abertos/servidores/jetons"

# get all the zip files
zipF <- list.files(path = caminho, pattern = "*.zip", full.names = TRUE)
library(plyr)
# unzip all your files
ldply(.data = zipF, .fun = unzip, exdir =  caminho)

ler_jetons <- function(x) {read_delim(x, 
                           delim = ";", escape_double = FALSE,
                           col_types = cols(MES = col_character()),
                           locale = locale(decimal_mark = ",", grouping_mark = ".",                            encoding = "Latin1"), trim_ws = TRUE)} 

arq_jetons <- list.files(caminho, pattern='*.csv')
setwd(caminho)

jetons <- map_df(arq_jetons,ler_jetons)

jetons <- jetons %>% clean_names() 
write_csv(jetons,"jetons.csv")
```

Após organizar em uma única tabela os dados sobre os jetons, nós vamos importar o arquivo salvo.

```{r importar_dados}
jetons <- read_csv("~/R/dados_abertos/servidores/jetons/jetons.csv")
```

### Atributo *nome_id*

O foco do nosso estudo não é o indivíduo, por este motivo criamos o atributo *nome_id* (junção das 4 primeiras letras do nome e o id do servidor), para manter a privacidade das pessoas. Seguimos um padrão semelhante ao utilizado no estudo sobre os favorecidos @tbl-nome_codigo .

```{r nome_id}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_id
#| tbl-cap: Atributo nome_id.


jetons <-  jetons %>% mutate(nome_id = str_c(str_sub(nome, start = 1L, end = 4L), " - ",id_servidor_portal))


jetons %>% group_by(nome_id) %>% summarise(nome_id = max(nome_id)) %>% head(10) %>% kable()
```

### Atributo *empresa*

Infelizmente a base de dados não traz o CNPJ das empresas. Enfrentamos desafio semelhante com a base de dados da receita @sec-inconsistencia_nomes

A tabela *jetons* retorna `r Format(length( unique(jetons$empresa)), fmt=myNumFmt)` registros únicos para o atributo *empresa*. Ao olhar rapidamente os dados, percebemos nomes parecidos para o que parecia ser uma única mesma empresa. A @tbl-nome_empresa_gas, por exemplo, traz quatro nomes semelhantes para a GÁS BRASILIANO DISTRIBUIDORA S.A. - GBD. As variações são por conta de acentos, a sigla da empresa e outros pequenos detalhes.

```{r nome_empresa_gas}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_gas
#| tbl-cap: Nome das empresas.

agrep("GAS BRASILIANO DISTRIBUIDORA S.A",unique(jetons$empresa),value = TRUE ,ignore.case = TRUE) %>% kable(col.names = c("empresa"))

```

### Função *nome_empresa*

Criamos a função *nome_empresa* para lidar com a falta do CNPJ e múltiplos nomes para uma mesma empresa. Utilizamos a função e agrupamos os nomes parecidos por meio do atributo *empresa_upper.*

```{r funcao_nome_empresa}
#| warning: false
#| message: false
#| error: false




nome_empresa <- function(empresa_find){
# agrep para identificar e str_to_upper para converter todos os nomes para maiúsculo  
# empresa_find é a base que será utilizada
# empresa_find é igual à unique(jetons$empresa) tentei utilizar empresa_find como ao invés de  unique(jetons$empresa), mas apresentava problema na hora de fazer map_df. Em outra oportunidade posso tentar simplificar a função nome_empresa, desde que consiga fazer o map_df ou laply 
empresa_upper <-  str_to_upper( max(unique(jetons$empresa)[agrep(empresa_find,unique(jetons$empresa), ignore.case = TRUE)]))

empresa <- empresa_find

df <- data.frame(empresa, empresa_upper)
}


# vincular os múltiplos nomes do atributo "empresa" a um único nome em "empresa_upper"
nome_empresa_novo <- map_df(unique(jetons$empresa), nome_empresa)


# adicionar à df jetons o atributo "empresa_upper"
jetons <- left_join(jetons,nome_empresa_novo, by = c("empresa" = "empresa"))






```

### Atributo *empresa_upper*

Agora, ao invés de trabalhar com `r Format(length( unique(jetons$empresa)), fmt=myNumFmt)`nomes únicos para o atributo *empresa*, passamos a utilizar apenas `r Format(length( unique(jetons$empresa_upper)), fmt=myNumFmt)` registros únicos para o atributo *empresa_upper ("upper" por* transformar o nome para upper case/maiúscula).

```{r nome_empresa_upper}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_upper
#| tbl-cap: Agrupamento dos nomes - etapa 1 (empresa_upper).

nome_empresa_novo %>% group_by(empresa_upper) %>%
                  count() %>% arrange(desc(n)) %>% head(10) %>%
                  kable( col.names = c("atributo empresa upper","quantidade de nomes agrupados"), digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))


```

A função *nome_empresa* facilitou o tratamento dos dados, mas ainda restavam algumas inconsistências (vide @tbl-nome_empresa_upper_problemas).

```{r nome_empresa_upper_problemas}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_upper_problemas
#| tbl-cap: Agrupamento dos nomes - etapa 2 (inconsistências).
jetons %>%
  filter(empresa %in% c ("BB SEGURIDADE PARTICIPAÇÕES S.A.",
                         "CAIXA SEGURIDADE E PARTICIPAÇÕES S.A.",
                         "COMPANHIA DE DOCAS DO PARÁ - CDP",
                         "COMPANHIA DOCAS DO CEARÁ - CDC",
                         "ompanhia Imobiliária de Brasília - TERRACAP" ,
                         "U BINACIONAL",
                         "REMPRESA BRASILEIRA DE AERONAUTICA",
                         "SA BRASILEIRA DE AERONAUTICA") ) %>%
                        group_by(empresa_upper,empresa) %>% count() %>%
                        select(-n)%>% kable()
```

### Atributo *empresa_final*

A última etapa para sanar as inconsistências nos nomes das empresas consistiu em criar o atributo *empresa_final* a partir de regras específicas. De agora em diante utilizaremos o atributo e*mpresa_final* para identificar as empresas.

```{r nome_empresa_final}
#| warning: false
#| message: false
#| error: false
#| label: tbl-nome_empresa_final
#| tbl-cap: Agrupamento dos nomes - etapa 3 (nome_final).


jetons <-  jetons %>% mutate( empresa_final  = case_when(
empresa_upper == "OMPANHIA IMOBILIÁRIA DE BRASÍLIA - TERRACAP" ~ "COMPANHIA IMOBILIÁRIA DE BRASÍLIA - TERRACAP",

empresa_upper == "ITAIPUBINACIONAL" ~ "ITAIPU BINACIONAL",

empresa_upper == "CAIXA SEGURIDADE E PARTICIPAÇÕES S.A." & empresa ==  "BB SEGURIDADE PARTICIPAÇÕES S.A." ~ "BB SEGURIDADE PARTICIPAÇÕES S.A.",

empresa_upper == "COMPANHIA DOCAS DO PARÁ - CDP" & empresa ==  "COMPANHIA DOCAS DO CEARÁ - CDC" ~ "COMPANHIA DOCAS DO CEARÁ - CDC",

empresa_upper == "REMPRESA BRASILEIRA DE AERONAUTICA" ~ "EMPRESA BRASILEIRA DE AERONAUTICA",

empresa_upper == "SA BRASILEIRA DE AERONAUTICA" ~ "EMPRESA BRASILEIRA DE AERONAUTICA",

empresa_upper == "U BINACIONAL" ~ "ITAIPU BINACIONAL",

TRUE ~ empresa_upper

))


jetons %>% 
  filter(empresa %in% c ("BB SEGURIDADE PARTICIPAÇÕES S.A.",
                         "CAIXA SEGURIDADE E PARTICIPAÇÕES S.A.", 
                         "COMPANHIA DE DOCAS DO PARÁ - CDP", 
                         "COMPANHIA DOCAS DO CEARÁ - CDC", 
                         "ompanhia Imobiliária de Brasília - TERRACAP" ,
                         "ITAIPU BINACIONAL", "U BINACIONAL", 
                         "EMPRESA BRASILEIRA DE AERONAUTICA",
                         "REMPRESA BRASILEIRA DE AERONAUTICA",
                         "SA BRASILEIRA DE AERONAUTICA") ) %>%
                         group_by(empresa_final, empresa_upper,empresa) %>%
                         count() %>% select(-n)  %>%
                         arrange(empresa_final) %>%    kable() 

```

### Variação valores

A @tbl-variacao_jetons_mes apresenta os maiores e menores valores de jetons pagos por uma empresa em um determinado ano e mês. Por exemplo, a AMAZUL pagou em julho de 2022 um jeton no valor de R\$ 30.123 e outro de R\$ 104 (uma diferença de mais de R\$ 30 mil).

```{r}
#| warning: false
#| message: false
#| error: false
#| label: tbl-variacao_jetons_mes
#| tbl-cap: Variação do jeton para uma mesma empresa, ano e mês.

jetons %>%  group_by(empresa_final,ano, mes) %>%
            mutate(ano = as.character(ano)) %>%
            summarise(maior = max(valor), menor = min(valor), 
            diferenca = round(maior - menor,0) ,
            variacao = round(diferenca /menor,0)) %>% 
            filter(variacao > 10, menor>2)  %>%
            arrange(desc(variacao)) %>%
            select(-diferenca, - variacao) %>% head(10)  %>% 
            kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ",")) 


```

Já a @tbl-variacao_jetons_conselheiro mostra o maior e o menor jeton pago por uma empresa a um determinado conselheiro em um determinado ano. Por exemplo, em 2017, a Itaipu Binacional pagou para PAUL - 79015897 um valor máximo de R\$ 27.402 e um valor mínimo de R\$ 274.

```{r}
#| warning: false
#| message: false
#| error: false
#| label: tbl-variacao_jetons_conselheiro
#| tbl-cap: Variação do jeton para uma mesma empresa, ano e conselheiro.

jetons %>%  group_by( empresa_final,ano,  nome_id) %>% 
            mutate(ano = as.character(ano)) %>% 
            summarise(maior = max(valor), menor = min(valor), 
            diferenca = round(maior - menor,0) , 
            variacao = round(diferenca /menor,0)) %>%
            filter(variacao > 10, menor>2)  %>%       arrange(desc(variacao))%>% 
            select(-diferenca, - variacao) %>% head(10)%>%  
            kable(digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))
```

Tanto a variação dos valores dos jetons dentro de um mês quanto a variação dos valores recebidos pelos conselheiros instiga uma certa curiosidade. Contudo, o foco deste estudo não é verificar a oscilações dos valores.

## Apresentação dos dados

### Visão geral

O @fig-plot_jetons traz uma série histórica para o período de 2013 a 2023 com o valor do maior jeton pago por cada empresa em cada ano. O maior valor foi o de R\$ 77 mil pagos pela Petrobras em 2022.

Na nossa base de dados `r  round(nrow( jetons %>% group_by(empresa_final, ano) %>% summarize(valor = round(max(valor),0)/1000) %>% filter(valor>2) %>% count() )/nrow( jetons %>% group_by(empresa_final, ano) %>% summarize(valor = round(max(valor),0)/1000) %>% count() )*100,0)` % das empresas pagou jetons de até R\$ 2.000.

```{r visao_geral}
#| warning: false
#| message: false
#| error: false
#| label: fig-plot_jetons
#| fig-cap: Valor máximo dos pagamentos de jetons por ano e por empresa.




p <- ggplot(jetons %>% group_by(empresa_final, ano) %>% 
            summarize(valor = round(max(valor),0)/1000) , 
            aes(valor, ano, color = empresa_final)) +
            geom_jitter ()+ coord_flip()+ 
            theme(legend.position="none") +labs(x= "Jetons (R$ mil)") 

ggplotly(p)
```

### Maiores jetons pagos em um único mês

As empresas Petrobras, Itaipu, BNDES e Embraer lideram a lista dos maiores jetons pagos em um único mês. Os maiores jetons superam o montante de R\$ `r  as.integer(min((jetons %>% mutate (data = format(parse_date_time(paste0(jetons$ano,jetons$mes),"ym"), "%b-%Y"))%>% group_by(empresa_final, data, nome_id) %>% summarise(valor = max(valor/1000, na.rm = TRUE))  %>% arrange(desc(valor)) %>% head(20))[4:4]))` mil e o maior de todos, pago pela Petrobras, alcança a marca de R\$ `r  as.integer(max((jetons %>% mutate (data = format(parse_date_time(paste0(jetons$ano,jetons$mes),"ym"), "%b-%Y"))%>% group_by(empresa_final, data, nome_id) %>% summarise(valor = max(valor/1000, na.rm = TRUE))  %>% arrange(desc(valor)) %>% head(20))[4:4]))` mil.

```{r maiores_jetons}
#| warning: false
#| message: false
#| error: false
#| label: tbl-maiores_jetons
#| tbl-cap: Maiores jetons pagos em um único mês.




jetons %>%   mutate (data = format(parse_date_time(paste0(jetons$ano,jetons$mes),"ym"), "%b-%Y"))%>%
            group_by(empresa_final, data, nome_id) %>% 
            summarise(valor = max(valor, na.rm = TRUE))  %>% 
            arrange(desc(valor)) %>% head(20) %>%
            kable(col.names = c("Empresa","Data","Servidor","(R$)"),
            digits = 0, format.args = list(big.mark = ".", decimal.mark = ",")) 





```

### Servidores que mais receberam jetons

De 2013 a 2023 um único conselheiro recebeu de R\$ `r Format(as.integer(max((jetons %>% group_by(nome_id) %>% summarise(valor = sum(valor)) %>% arrange(desc(valor)) %>% head(20))[2:2])), fmt=myNumFmt)` de jetons.

```{r total_jetons_recebidos}
#| warning: false
#| message: false
#| error: false
#| label: tbl-ranking_servidor_jetons
#| tbl-cap: Servidores que mais receberam jetons.

jetons %>% group_by(nome_id) %>% 
           summarise(valor = sum(valor)) %>% 
           arrange(desc(valor)) %>% head(20)%>% 
           kable(col.names = c("Servidor",paste0("(R$) entre " , min(jetons$ano), " e ", max(jetons$ano))), 
          digits = 0, format.args = list(big.mark = ".", decimal.mark = ","))



```

### Empresas que mais pagaram jetons

O BNDES liderou o pagamento de jetons de 2013 a 2023 com o montante de R\$ `r Format(round(max((jetons %>% group_by( empresa_final) %>% summarise(valor = sum(valor)/1000000) %>% arrange(desc(valor)) %>% head(20))[2:2]),2), fmt=myNumFmt)` milhões

As 20 maiores pagadoras de jetons pagaram um total de R\$ `r Format(round(sum((jetons %>% group_by( empresa_final) %>% summarise(valor = sum(valor)/1000000) %>% arrange(desc(valor)) %>% head(20))[2:2]),2), fmt=myNumFmt)` milhões

```{r maiores_pagadores_de_jetons}
#| warning: false
#| message: false
#| error: false
#| label: tbl-ranking_empresas_jetons
#| tbl-cap: Empresas que mais pagaram jetons.
jetons %>% group_by( empresa_final) %>%
           summarise(valor = sum(valor)/1000000) %>%
           arrange(desc(valor)) %>% head(20)%>%
           kable(col.names = c("Empresa",paste0("(R$ mi) entre " , min(jetons$ano), " e ", max(jetons$ano))),
           digits = 2, format.args = list(big.mark = ".", decimal.mark = ",")) 




```

## Considerações finais

### Ausência do CNPJ

A principal limitação da base de dados é a ausência do atributo CNPJ.

### Nome das empresas

Encontramos inconsistências no nome das empresas.

### Variação dos valores

Os valores de jetons apresentam grande oscilações, seja para um mesmo conselheiro, seja para um mesmo período.

### Futuros estudos

Outros estudos poderiam investigar a oscilação nos valores dos jetons.
